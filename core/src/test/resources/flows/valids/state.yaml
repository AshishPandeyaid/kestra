id: state
namespace: io.kestra.tests

inputs:
  - name: state
    type: STRING

tasks:
  - id: state
    type: io.kestra.core.tasks.states.Get
    name: "{{ inputs.state }}"
  - id: switch
    type: io.kestra.core.tasks.flows.Switch
    value: "{{ (outputs.state.data.value ?? 0) == 0 ? 'create' : ( outputs.state.data.value == 1 ? 'update' : 'delete') }}"
    cases:
      "create":
        - id: create
          type: io.kestra.core.tasks.states.Set
          name: "{{ inputs.state }}"
          data:
            value: 1
        - id: createGet
          type: io.kestra.core.tasks.states.Get
          name: "{{ inputs.state }}"

      "update":
        - id: update
          type: io.kestra.core.tasks.states.Set
          name: "{{ inputs.state }}"
          data:
            value: "{{ outputs.state.data.value + 1 }}"
        - id: updateGet
          type: io.kestra.core.tasks.states.Get
          name: "{{ inputs.state }}"


      "delete":
        - id: delete
          type: io.kestra.core.tasks.states.Delete
          name: "{{ inputs.state }}"
        - id: deleteGet
          type: io.kestra.core.tasks.states.Get
          name: "{{ inputs.state }}"
